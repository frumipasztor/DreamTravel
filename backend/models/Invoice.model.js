const mongoose = require("mongoose");

const invoiceSchema = new mongoose.Schema({
  id: { type: Number },
  invoice_number: { type: String },
  type: { type: String },
  cancelled: { type: Boolean },
  block_id: { type: Number },
  payment_status: { type: String },
  payment_method: { type: String },
  gross_total: { type: Number },
  currency: { type: String },
  conversion_rate: { type: Number },
  invoice_date: { type: String },
  fulfillment_date: { type: String },
  due_date: { type: String },
  paid_date: { type: String },
  organization: {
    name: { type: String },
    tax_number: { type: String },
    bank_account: {
      name: { type: String },
      account_number: { type: String },
      account_number_iban: { type: String },
      swift: { type: String },
    },
    address: {
      country_code: { type: String },
      post_code: { type: String },
      city: { type: String },
      address: { type: String },
    },
    small_taxpayer: { type: Boolean },
    ev_number: { type: String },
    eu_tax_number: { type: String },
    cash_settled: { type: Boolean },
  },
  partner: {
    id: { type: Number },
    name: { type: String },
    address: {
      country_code: { type: String },
      post_code: { type: String },
      city: { type: String },
      address: { type: String },
    },
    emails: { type: Array },
    taxcode: { type: String },
    iban: { type: String },
    swift: { type: String },
    account_number: { type: String },
    phone: { type: String },
    general_ledger_number: { type: String },
    tax_type: { type: String },
    group_member_tax_number: { type: String },
  },
  document_partner: {
    id: { type: Number },
    name: { type: String },
    address: {
      country_code: { type: String },
      post_code: { type: String },
      city: { type: String },
      address: { type: String },
    },
    emails: { type: Array },
    taxcode: { type: String },
    iban: { type: String },
    swift: { type: String },
    account_number: { type: String },
    phone: { type: String },
    tax_type: { type: String },
  },
  electronic: { type: Boolean },
  comment: { type: String },
  tags: { type: Array },
  notification_status: { type: String },
  language: { type: String },
  items: [
    {
      product_id: { type: Number },
      name: { type: String },
      net_unit_amount: { type: Number },
      quantity: { type: Number },
      unit: { type: String },
      net_amount: { type: Number },
      gross_amount: { type: Number },
      vat: { type: String },
      vat_amount: { type: Number },
    },
  ],

  summary: {
    net_amount: { type: Number },
    net_amount_local: { type: Number },
    gross_amount_local: { type: Number },
    vat_amount: { type: Number },
    vat_amount_local: { type: Number },
    vat_rate_summary: [
      {
        vat_name: { type: String },
        vat_percentage: { type: Number },
        vat_rate_net_amount: { type: Number },
        vat_rate_vat_amount: { type: Number },
        vat_rate_vat_amount_local: { type: Number },
        vat_rate_gross_amount: { type: Number },
      },
    ],
  },
  settings: {
    mediated_service: { type: Boolean },
    without_financial_fulfillment: { type: Boolean },
    online_payment: { type: String },
    round: { type: String },
    no_send_onlineszamla_by_user: { type: Boolean },
    order_number: { type: String },
    instant_payment: { type: Boolean },
  },
  related_documents: { type: Array },
  online_szamla_status: { type: String },
});

module.exports = mongoose.model("Invoice", invoiceSchema);
